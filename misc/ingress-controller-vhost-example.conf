	## start server oauth2-proxy-echo.migmartri.com
	server {
		server_name oauth2-proxy-echo.migmartri.com ;
		
		listen 80;
		
		listen [::]:80;
		
		set $proxy_upstream_name "-";
		
		listen 443  ssl http2;
		
		listen [::]:443  ssl http2;
		
		# PEM sha: 6f9768e1d055285c0af208fdaa25d022b9ab073e
		ssl_certificate                         /etc/ingress-controller/ssl/kubeprod-echo-oauth2-server-tls.pem;
		ssl_certificate_key                     /etc/ingress-controller/ssl/kubeprod-echo-oauth2-server-tls.pem;
		
		ssl_trusted_certificate                 /etc/ingress-controller/ssl/kubeprod-echo-oauth2-server-tls-full-chain.pem;
		ssl_stapling                            on;
		ssl_stapling_verify                     on;
		
		location = /_external-auth-L29hdXRoMg {
			internal;
			
			# ngx_auth_request module overrides variables in the parent request,
			# therefore we have to explicitly set this variable again so that when the parent request
			# resumes it has the correct value set for this variable so that Lua can pick backend correctly
			set $proxy_upstream_name "kubeprod-oauth2-proxy-4180";
			
			proxy_pass_request_body     off;
			proxy_set_header            Content-Length "";
			proxy_set_header            X-Forwarded-Proto "";
			
			proxy_set_header            Host                    oauth2-proxy-echo.migmartri.com;
			proxy_set_header            X-Original-URL          $scheme://$http_host$request_uri;
			proxy_set_header            X-Original-Method       $request_method;
			proxy_set_header            X-Sent-From             "nginx-ingress-controller";
			proxy_set_header            X-Real-IP               $the_real_ip;
			
			proxy_set_header            X-Forwarded-For        $the_real_ip;
			
			proxy_set_header            X-Auth-Request-Redirect $request_uri;
			
			proxy_buffering                         off;
			proxy_buffer_size                       4k;
			proxy_buffers                           4 4k;
			proxy_request_buffering                 on;
			
			proxy_http_version          1.1;
			proxy_ssl_server_name       on;
			proxy_pass_request_headers  on;
			
			client_max_body_size        1m;
			
			# Pass the extracted client certificate to the auth provider
			
			set $target https://oauth2-proxy-echo.migmartri.com/oauth2/auth;
			proxy_pass $target;
		}
		
		location /oauth2 {
			
			set $namespace      "kubeprod";
			set $ingress_name   "echo-server";
			set $service_name   "oauth2-proxy";
			set $service_port   "4180";
			set $location_path  "/oauth2";
			
			rewrite_by_lua_block {
				balancer.rewrite()
			}
			access_by_lua_block {
				
			}
			header_filter_by_lua_block {
				
			}
			body_filter_by_lua_block {
				
			}
			
			log_by_lua_block {
				
				balancer.log()
				monitor.call()
			}
			
			if ($scheme = https) {
				more_set_headers                        "Strict-Transport-Security: max-age=15724800; includeSubDomains";
			}
			
			port_in_redirect off;
			
			set $proxy_upstream_name "kubeprod-oauth2-proxy-4180";
			
			# enforce ssl on server side
			if ($redirect_to_https) {
				
				return 308 https://$best_http_host$request_uri;
				
			}
			
			client_max_body_size                    1m;
			
			proxy_set_header Host                   $best_http_host;
			
			# Pass the extracted client certificate to the backend
			
			# Allow websocket connections
			proxy_set_header                        Upgrade           $http_upgrade;
			
			proxy_set_header                        Connection        $connection_upgrade;
			
			proxy_set_header X-Request-ID           $req_id;
			proxy_set_header X-Real-IP              $the_real_ip;
			
			proxy_set_header X-Forwarded-For        $the_real_ip;
			
			proxy_set_header X-Forwarded-Host       $best_http_host;
			proxy_set_header X-Forwarded-Port       $pass_port;
			proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
			
			proxy_set_header X-Original-URI         $request_uri;
			
			proxy_set_header X-Scheme               $pass_access_scheme;
			
			# Pass the original X-Forwarded-For
			proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
			
			# mitigate HTTPoxy Vulnerability
			# https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
			proxy_set_header Proxy                  "";
			
			# Custom headers to proxied server
			
			proxy_connect_timeout                   15s;
			proxy_send_timeout                      60s;
			proxy_read_timeout                      60s;
			
			proxy_buffering                         off;
			proxy_buffer_size                       4k;
			proxy_buffers                           4 4k;
			proxy_request_buffering                 on;
			
			proxy_http_version                      1.1;
			
			proxy_cookie_domain                     off;
			proxy_cookie_path                       off;
			
			# In case of errors try the next upstream server before returning an error
			proxy_next_upstream                     error timeout;
			proxy_next_upstream_tries               3;
			
			proxy_pass http://upstream_balancer;
			
			proxy_redirect                          off;
			
		}
		
		location = /_external-auth-Lw {
			internal;
			
			# ngx_auth_request module overrides variables in the parent request,
			# therefore we have to explicitly set this variable again so that when the parent request
			# resumes it has the correct value set for this variable so that Lua can pick backend correctly
			set $proxy_upstream_name "kubeprod-echo-server-8080";
			
			proxy_pass_request_body     off;
			proxy_set_header            Content-Length "";
			proxy_set_header            X-Forwarded-Proto "";
			
			proxy_set_header            Host                    oauth2-proxy-echo.migmartri.com;
			proxy_set_header            X-Original-URL          $scheme://$http_host$request_uri;
			proxy_set_header            X-Original-Method       $request_method;
			proxy_set_header            X-Sent-From             "nginx-ingress-controller";
			proxy_set_header            X-Real-IP               $the_real_ip;
			
			proxy_set_header            X-Forwarded-For        $the_real_ip;
			
			proxy_set_header            X-Auth-Request-Redirect $request_uri;
			
			proxy_buffering                         off;
			proxy_buffer_size                       4k;
			proxy_buffers                           4 4k;
			proxy_request_buffering                 on;
			
			proxy_http_version          1.1;
			proxy_ssl_server_name       on;
			proxy_pass_request_headers  on;
			
			client_max_body_size        1m;
			
			# Pass the extracted client certificate to the auth provider
			
			set $target https://oauth2-proxy-echo.migmartri.com/oauth2/auth;
			proxy_pass $target;
		}
		
		location / {
			
			set $namespace      "kubeprod";
			set $ingress_name   "echo-server";
			set $service_name   "echo-server";
			set $service_port   "8080";
			set $location_path  "/";
			
			rewrite_by_lua_block {
				balancer.rewrite()
			}
			access_by_lua_block {
				
			}
			header_filter_by_lua_block {
				
			}
			body_filter_by_lua_block {
				
			}
			
			log_by_lua_block {
				
				balancer.log()
				monitor.call()
			}
			
			if ($scheme = https) {
				more_set_headers                        "Strict-Transport-Security: max-age=15724800; includeSubDomains";
			}
			
			port_in_redirect off;
			
			set $proxy_upstream_name "kubeprod-echo-server-8080";
			
			# enforce ssl on server side
			if ($redirect_to_https) {
				
				return 308 https://$best_http_host$request_uri;
				
			}
			
			# this location requires authentication
			auth_request        /_external-auth-Lw;
			auth_request_set    $auth_cookie $upstream_http_set_cookie;
			add_header          Set-Cookie $auth_cookie;
			auth_request_set $authHeader0 $upstream_http_x_auth_request_user;
			proxy_set_header 'X-Auth-Request-User' $authHeader0;
			auth_request_set $authHeader1 $upstream_http_x_auth_request_email;
			proxy_set_header 'X-Auth-Request-Email' $authHeader1;
			
			set_escape_uri $escaped_request_uri $request_uri;
			error_page 401 = https://oauth2-proxy-echo.migmartri.com/oauth2/start?rd=$pass_access_scheme://$http_host$escaped_request_uri;
			
			client_max_body_size                    1m;
			
			proxy_set_header Host                   $best_http_host;
			
			# Pass the extracted client certificate to the backend
			
			# Allow websocket connections
			proxy_set_header                        Upgrade           $http_upgrade;
			
			proxy_set_header                        Connection        $connection_upgrade;
			
			proxy_set_header X-Request-ID           $req_id;
			proxy_set_header X-Real-IP              $the_real_ip;
			
			proxy_set_header X-Forwarded-For        $the_real_ip;
			
			proxy_set_header X-Forwarded-Host       $best_http_host;
			proxy_set_header X-Forwarded-Port       $pass_port;
			proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
			
			proxy_set_header X-Original-URI         $request_uri;
			
			proxy_set_header X-Scheme               $pass_access_scheme;
			
			# Pass the original X-Forwarded-For
			proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
			
			# mitigate HTTPoxy Vulnerability
			# https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
			proxy_set_header Proxy                  "";
			
			# Custom headers to proxied server
			
			proxy_connect_timeout                   15s;
			proxy_send_timeout                      60s;
			proxy_read_timeout                      60s;
			
			proxy_buffering                         off;
			proxy_buffer_size                       4k;
			proxy_buffers                           4 4k;
			proxy_request_buffering                 on;
			
			proxy_http_version                      1.1;
			
			proxy_cookie_domain                     off;
			proxy_cookie_path                       off;
			
			# In case of errors try the next upstream server before returning an error
			proxy_next_upstream                     error timeout;
			proxy_next_upstream_tries               3;
			
			proxy_pass http://upstream_balancer;
			
			proxy_redirect                          off;
			
		}
		
	}
	## end server oauth2-proxy-echo.migmartri.com
